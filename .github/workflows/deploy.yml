name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests with coverage
        run: |
          pytest --cov=apps --cov=db --cov=core --cov-report=xml --cov-report=term-missing tests/unit/ -v --disable-warnings --tb=short

      - name: Run CORS tests
        run: |
          pytest --cov-append --cov=apps --cov=db --cov=core --cov-report=xml --cov-report=term-missing tests/test_cors.py -v --disable-warnings --tb=short

      - name: Run integration tests with coverage
        run: |
          pytest --cov-append --cov=apps --cov=db --cov=core --cov-report=xml --cov-report=term-missing tests/integration/ -v --disable-warnings --tb=short

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Deploy code to server
        uses: actions/checkout@v4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./"
          target: ${{ secrets.BACKEND_DIR }}

  migrate:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v3

      - name: Run migrations on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ secrets.BACKEND_DIR }}
            docker compose exec api python db/migrate.py

      - name: Health check
        run: |
          curl --fail http://${{ secrets.SERVER_IP }}/ping

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.CR_PAT }}@github.com/Mee1ad/super-app.git
          git tag "v${{ github.run_number }}"
          git push origin --tags

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}