name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Create secrets directory
      run: mkdir -p secrets

    - name: Create secret files
      run: |
        echo "${{ secrets.API_KEY }}" > secrets/api_key
        echo "${{ secrets.DB_PASSWORD }}" > secrets/db_password
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > secrets/id_rsa
        echo "${{ secrets.SSH_PUBLIC_KEY }}" > secrets/id_rsa.pub
        chmod 600 secrets/id_rsa
        chmod 644 secrets/id_rsa.pub

    - name: Template inventory with env vars
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "DEBUG: SERVER_IP = $SERVER_IP"
        echo "DEBUG: SERVER_USER = $SERVER_USER"
        echo "DEBUG: Original inventory content:"
        cat ansible/inventory.yml
        echo "DEBUG: Running envsubst..."
        envsubst < ansible/inventory.yml > ansible/inventory.yml.tmpl
        echo "DEBUG: Templated inventory content:"
        cat ansible/inventory.yml.tmpl
        mv ansible/inventory.yml.tmpl ansible/inventory.yml
        echo "DEBUG: Final inventory content:"
        cat ansible/inventory.yml

    - name: Debug inventory before Ansible
      run: |
        echo "DEBUG: Current working directory: $(pwd)"
        echo "DEBUG: Inventory file exists: $(test -f ansible/inventory.yml && echo 'YES' || echo 'NO')"
        echo "DEBUG: Inventory file content before Ansible:"
        cat ansible/inventory.yml

    - name: Setup Ansible
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: ansible/deploy.yml
        inventory: ansible/inventory.yml
        options: |
          --verbose
          --extra-vars "github_repository=${{ github.repository }}"
          --inventory-file ansible/inventory.yml
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}

    - name: Cleanup secrets
      run: rm -rf secrets
      if: always() 